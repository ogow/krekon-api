services:
  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: krekonApiPasswordOskarWasHere123
    image: mongo:latest
    restart: always
    container_name: krekon-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - krekonapinetwork

  redis:
    image: redis:latest
    container_name: krekon-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - krekonapinetwork

  krekonapi:
    container_name: krekonapi
    environment:
      PORT: 8080
    links:
      - "mongodb:db"
      - "redis"
    networks:
      - krekonapinetwork
    restart: always
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - mongodb

  postgres:
    image: postgres
    container_name: metabase-postgres
    restart: always
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: oskarwashere123!
      POSTGRES_USER: metabase
      POSTGRES_DB: metabasedb
    ports:
      - 5432:5432
    volumes:
      - metabase-postgres-data:/var/lib/postgresql/data
    networks:
      - krekonapinetwork

  metabase:
    deploy:
      resources:
        limits:
          memory: 2G
    volumes:
      - metabase-data:/metabase-data
    environment:
      # - MB_DB_FILE=/metabase-data/metabase.db
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabasedb
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: oskarwashere123!
      MB_DB_HOST: postgres
    ports:
      - 3001:3000
    image: metabase/metabase
    restart: always
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on: 
      - postgres
    networks:
      - krekonapinetwork


volumes:
  mongodb_data:
  redis_data:
  metabase-postgres-data:
  metabase-data:
networks:
  krekonapinetwork:
    driver: bridge
